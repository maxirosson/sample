version: 2.1

parameters:
  api:
    type: boolean
    default: false
  integration_tests:
    type: boolean
    default: false
  cron_workflow:
    type: boolean
    default: false

references:

  ## Workspace

  workspace: &workspace
    ~/job_workspace

  ## Docker image configurations

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.caching=true -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs="-Xmx4g -Xms1g"
      A: a
      B: b

  android_config_large: &android_config_large
    <<: *android_config
    environment:
      C: c

  persist_DDD_to_workspace: &persist_DDD_to_workspace
    persist_to_workspace:
      root: ./
      paths:
        - $MODULE_NAME/d.txt

  store_DDD_artifacts: &store_DDD_artifacts
    store_artifacts:
      path: ./DDD/d.txt
      destination: $MODULE_NAME.txt

executors:
  android_executor:
    <<: *android_config
    environment:
      B: b2

jobs:

  jobDDD:
    <<: *android_config
    steps:
      - run:
          name: Uptime
          command: uptime
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo "export MODULE_NAME=DDD" >> $BASH_ENV
      - run: |
          mkdir DDD
          cd DDD
          echo "hello jobDDD" > d.txt
          pwd
      - *persist_DDD_to_workspace
      - *store_DDD_artifacts
      - run:
          name: Uptime
          command: uptime

  jobA0:
    <<: *android_config_large
    steps:
      - checkout
      - run:
          command: |
            echo $c
            if [[ ${CIRCLE_BRANCH} =~ ^release.*$" ]]
            then
              echo "si"
            fi
      - run:
          name: Uptime
          command: uptime

  jobA1:
    executor: android_executor
    steps:
      - run:
          name: Uptime
          command: uptime
      - checkout
      - run:
          name: Uptime
          command: uptime
      - run: |
          echo $A
          echo $B
          echo $C
      - run: |
          mkdir aaa
          cd aaa
          mkdir bbb
          cd bbb
          echo "hello jobA1" > a1.txt
      - persist_to_workspace:
          root: ./aaa
          paths:
            - bbb/a1.txt
      - run: |
          mkdir ccc
          cd ccc
          echo "hello jobA1 inner 1" > a1_inner1.txt
          echo "hello jobA1 inner 2" > a1_inner2.txt
      - persist_to_workspace:
          root: .
          paths:
            - ccc
      - run: |
          mkdir build
          cd build
          echo "class1.java" > class1.java
          echo "class2.java" > class2.java
      - persist_to_workspace:
          root: .
          paths:
            - build
      - run:
          name: Uptime
          command: uptime
  jobA2:
    <<: *android_config
    steps:
      - checkout
      - run: |
          mkdir ccc
          cd ccc
          echo "hello jobA2 inner 1" > a2_inner1.txt
          echo "hello jobA2 inner 2" > a2_inner2.txt
      - persist_to_workspace:
          root: .
          paths:
            - ccc

  jobB:
    <<: *android_config
    steps:
      - run: pwd
      - run: |
          mkdir ccc
          cd ccc
          echo "hello inner 3" > a1_inner3.txt
      - attach_workspace:
          at: ./workspace
      - run: find . | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
      - run: cat ./workspace/bbb/a1.txt
      - run: echo "hello jobB" > ./workspace/bbb/b1.txt
      - persist_to_workspace:
          root: ./workspace
          paths:
            - bbb/b1.txt
      - run: |
          mkdir build
          cd build
          echo "class1.java" > class1.java
          echo "class3.java" > class3.java
      - persist_to_workspace:
          root: .
          paths:
            - build

  jobC:
    <<: *android_config
    steps:
      - attach_workspace:
          at: ./workspace
      - run: find . | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
      - run: cat ./workspace/bbb/a1.txt
      - run: cat ./workspace/bbb/b1.txt

  mytestjob:
    <<: *android_config
    steps:
      - checkout
      - run: echo "my test job"

  upgradeDependencies:
    <<: *android_config
    steps:
      - checkout
      - run: ./gradlew upgradeDependencies -PpullRequestEnabled=true

  sonar:
    <<: *android_config
    steps:
      - checkout
      - run: |
          ./gradlew clean testDebugUnitTest jacocoTestReport --stacktrace
          prId=$(echo $CIRCLE_PULL_REQUEST | rev | cut -d '/' -f 1 | rev)
          ./gradlew sonarqube -PPR_ID=${prId} --stacktrace

workflows:
  commit:
    unless: << pipeline.parameters.api >>
    jobs:
      #- jobDDD
      #- sonar
      - jobA0:
          pre-steps:
            - run:
                command: echo "Hello"
      - jobA1
      - jobA2
      - jobB:
          requires:
            - jobA1
            - jobA2
      - jobC:
          requires:
            - jobB
  integration_tests:
    when: << pipeline.parameters.integration_tests >>
    jobs:
      - mytestjob
  non_cron_workflow:
    when: << pipeline.parameters.cron_workflow >>
    jobs:
      - jobDDD
