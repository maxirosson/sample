version: 2

references:

  ## Workspace

  workspace: &workspace
    ~/workspace

  ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "core/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2

  ## Docker image configurations

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.caching=true -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dorg.gradle.jvmargs="-Xmx4g -Xms1g"

jobs:
  build:
    <<: *android_config
    steps:
      - checkout

      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew cleanBuildCache androidDependencies --refresh-dependencies --stacktrace
      - *save_cache

      - run: ./gradlew cleanBuildCache assemble --stacktrace

      - persist_to_workspace:
          root: *workspace
          paths:
            - app/build
            - core/build
            - build
            - build-cache
      - run:
          name: Save apks
          command: |
            mkdir -p ~/apks/
            find . -type f -regex ".*/build/outputs/apk/.*apk" -exec cp {} ~/apks/ \;
          when: always
      
      - store_artifacts:
          path: ~/apks
          destination: apks

  apiJob:
      <<: *android_config
      steps:
        - checkout
        - run: echo "Hello world"

  hold:
      <<: *android_config
      steps:
        - checkout
        - run: echo "Hello world approved"

  test:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      
      - run:
          name: Ls
          command: |
            cd core
            ls

      - attach_workspace:
          at: *workspace

      - run:
          name: Ls
          command: |
            cd core/build
            ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
            ls -R
            cd ..
            cd ..
            cd app/build
            ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
            cd ..
            cd ..
            cd build
            ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
            cd ..

      - run: ./gradlew test --stacktrace
      
      - run:
          name: Save test results 
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
          
      - store_test_results:
          path: ~/junit
          
      - store_artifacts:
          path: ./core/build/reports/tests/test
          destination: core/tests
          
      - store_artifacts:
          path: ./app/build/reports/tests/test
          destination: app/tests
          

workflows:
  version: 2
  commit:
    jobs:
      - build
      - test:
          requires:
            - hold
	  - hold:
		  type: approval
		  requires:
		   - build