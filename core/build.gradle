apply plugin: "com.android.library"

dependencies {
	testCompile 'junit:junit:4.0'
}

buildscript {
	repositories {
		jcenter()
		google()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.5.3'
		classpath "org.jacoco:org.jacoco.core:0.8.5"
	}
}

android {

	compileSdkVersion = 29

	// http://developer.android.com/tools/revisions/build-tools.html
	buildToolsVersion = "29.0.2"

	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 28
	}

	compileOptions {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}

	testOptions {
		unitTests {
			returnDefaultValues = true
			includeAndroidResources = true
		}
	}
}

android {
	buildTypes {
		debug {
			testCoverageEnabled true
		}
	}
}

tasks.withType(Test) {
	jacoco.includeNoLocationClasses = true
}

// The unit test task is creating a jacoco.exec file in the project dir, along with the jacoco/testDebugUnitTest.exec file.
// So, move it into the build dir so it doesn't pollute things and gets properly cleaned up on a clean.
// Note that for some modules the coverage results are in the jacoco.exec, and for others they are in testDebugUnitTest.exec.
// See https://issuetracker.google.com/issues/67872367
task moveJacocoExec {
	group = "Reporting"
	description = "Move jacoco.exec file created by unit tests into the build directory."

	doLast {
		ant.move file: "jacoco.exec", todir: "${buildDir}/jacoco", failonerror: false
	}
}
project.afterEvaluate { project ->
	project.tasks."testDebugUnitTest".finalizedBy moveJacocoExec
}